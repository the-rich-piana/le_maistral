hey everyone today let's just go ahead and discuss something about warsaw and aws so just to get you guys on the same page if you don't know what versailles it's a very popular hosting service provider sort of which created next js as well so this is the same company which created next js which is maintaining nexus as well and they are also a hosting provider but not only for just next js but a variety of other tech stacks as well aws on the other hand you guys know what it is so if you guys have been following me on twitter the link is in description you know that i tweeted this a little while ago that code damn has bypassed the you know just exhausted the free quota of the versailles bandwidth and i'm probably going to move it on aws serverless and i said it very confidently but there's a twist let's get into aws versus versailles exactly and what i chose finally so to give you a little background on code dams architecture this is not a full video on goddamn's architecture you can think of code damn as three services at the moment or three micro services the first one is the front end that is coded with nexus and has been hosted on versailles so far the second one is the graphql api server which is independently hosted on digitalocean right now and the third one is again uh the runner service which executes your code on the playground so nexus and backend are separate services and why that is a choice why that is a scalable choice we're gonna maybe cover that in a different video but to remember what you have to remember in this video is that this analysis of pricing and everything would be done on the fact that nexus does not or uses maybe like a couple of uh api endpoints only the back end the heavy lifting or maybe like you know the computation part happens on the graphql servers not on next year's end so i'm using next shares to deliver the full website um generate as much static pages as i could deliver them from versal cdn and it has been working well so far but after crossing the free tire 100 gb limit next chase or rather worsel needs you to upgrade their deer now i was pretty confident that hey let's just go ahead and switch to aws manage everything ourselves why the hell not but there are a few caveats to this number one pricing and aws sucks so hard when it comes to pricing compare versil and aws cloud front one on one aws cloud front the cheapest option you can get is a us cdn located in u.s and it cost you 0.085 cents per gigabyte of data transfer so if you are using your next year's project behind cloud front and you're delivering everything you know if i am hitting 100 gigabytes of data transfer per month just like i'm doing with worst cell it cost me 8.5 us dollar just for the data transfer alone this does not include the s3 storage fees or the ec2 computation fees yet it is just data transfer alone and this is just something which versailles provides for free right so that sucks but it sucks even more when you go and multiply it by 10 that is 1000 gb or one terabyte of data so one tb of data transfer will cost you 85 dollars um and it sucks because on warsaw if you are on the paid plan they give you for 20 dollars they give you one terabyte of data transfer now you might say that hey mayhew you're not gonna use one terabyte of data transfer anyway the code damn website is not gonna use that but even if you think about it if you even if you're hitting 200 300 gigabytes of data transfer then also it becomes expensive than hosting it on aws s3 and cloudfront in front of it so the first biggest thing which was a huge blow was the pricing right if you are not doing huge amount of data transfers with aws you will not get discounted pricing and this is like one of the biggest things of aws for small startups which are you know they are not too aggressive i mean they are not like transferring 40 50 terabytes of data a month but they are not even you know that small 1 2 gb of data so for um a size a startup size like code dam it is best to have that 20 cap for one terabyte of data so this is why in the pricing department i considered worsel as the winning factor because looking at the growth of code dam and the amount of traffic we are receiving right now we are easily going to exceed 200 250 300 gigabytes of data maybe in not if and not in a couple of weeks then in a month so that is a smart move for now the second point with aws was the infrastructure management now see that aws is infrastructure as a service that means that sure you're gonna have a lot of control but you know as the saying goes with great power comes great responsibility and as somebody who's trying to grow and outreach and just just make sure a lot of people know about your product spending a lot of time on infrastructures configuring everything making sure nothing blows up kind of defeats the purpose of running a business right i want to help a lot of people with code damn i want to create a lot of content i want to extend a lot of uh you know just extend the reach of the platform to a lot of people i want to get a lot of creators on board but if i'm spending a lot of time in aws console or maybe like with the serverless yaml configuration files and trust me i'm not i'm no cloud expert so i have to learn those stuff as well that defeats the purpose of uh you know just just running a business right you don't really want to code all day long so to deploy next year's on aws there are fantastic solutions which exist right now i checked in depth about serverless next gs which is a fantastic effort from the community to um you know just publish your next year's application completely on aws infrastructure using lambda edge for the api function computation and the server-side rendering cloudflare and not really cloudflare cloudfront and s3 for storing assets and everything is automated and deployable but again caveats exist here first of all it has to actively support the new features which next year's has been rolling out and it has just recently supported image component in the alpha um sort of branch so yeah i mean next year's universal and you know given that warsaw has already raised a lot of money these guys are moving pretty fast and if you want the best of next years if you want all the features then probably warsal is the company to look for aws is fine if you are a big enterprise with a lot of people and you guys know what you are doing but for me for um you know go down running a small startup right now and with not a lot of people um i would prefer simplicity and uh you know just offloading my headache of managing serverless and you know all that stuff to a company like wassel for a very low price in fact even profitable not even i don't really have to pay anything extra compared to aws pricing so that seems like a very great option in in my case so again no doubt that in the ease of use the points again goes to warsaw another reason of not using aws but versailles was because i was using a lot of projects in next years which are sub-domains of code dam so it would have been more serverless configurations more management more um you know getting deep into aws which to be honest i do not have a lot of time right now i do not have a lot of time to learn the networking sites and you know depth of how aws operates i would rather want to focus more on the business logic of uh you know getting things done at goddamn right now then maybe like uh configuring aws for aws i can always get somebody who's an expert instead of me learning the whole thing right now i could just probably focus on where i'm best at so yeah final verdict code damn is staying on warsaw i have upgraded to warsaw pro that cost me twenty dollars a month for a single person seat now this is a tricky part of reversal they do not charge i mean they do charge you on the usage that's fine but they also charge you twenty dollars for a single user on a single um you know seat or whatever they want to call it plus the simple functionalities like password protecting your site or um i don't know a couple of more features they cost you like fifty hundred dollars so like analytics cost you ten dollars which is like half the price of a single seat so there are things about pricing model of versailles again which i do not like but for me the maximum use for warsaw would be the reversal cdn and the data transfer which is like a huge saver for um 20 bucks you get a one terabyte limit and you can even increase the request and increase from the support so let's see how that goes so yeah guys that's pretty much it for this video i hope you learned something new i hope you understood something new let me know what you think about aws vs versailles do you prefer aws for next year's installations if yes why is that the reason i would love to know that in the comments below because to be fair i could not see any single reason why would you use aws if you are somebody who's using nexjs is in the range of you know about 200 300 400 gigabytes of data transfer a month and has a dedicated back-end infrastructure you that means you're just using next year's like i am so do you have any reason for using it on aws if yes let's talk if no give me a thumbs up in the comments so that is all for this one i'm gonna see you in the next video